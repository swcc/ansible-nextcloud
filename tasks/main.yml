---
# https://docs.nextcloud.com/server/18/admin_manual/installation/source_installation.html#prerequisites-for-manual-installation
- name: Install list of prerequired php modules
  package:
    name:
      - php{{ php_fpm_version }}-curl
      - php{{ php_fpm_version }}-dom
      - php{{ php_fpm_version }}-fileinfo
      - php{{ php_fpm_version }}-gd
      - php{{ php_fpm_version }}-iconv
      - php{{ php_fpm_version }}-imagick
      - php{{ php_fpm_version }}-intl
      - php{{ php_fpm_version }}-json
      - php{{ php_fpm_version }}-gmp
      - php{{ php_fpm_version }}-bcmath
      - php{{ php_fpm_version }}-mbstring
      - php{{ php_fpm_version }}-mysql
      - php{{ php_fpm_version }}-pgsql
      - php{{ php_fpm_version }}-xml
      - php{{ php_fpm_version }}-zip
    update_cache: yes

- name: Make sure destination folder exists
  file:
    path: "{{ nextcloud_destination }}"
    state: directory
    owner: "{{ nextcloud_dir_user }}"
    group: "{{ nextcloud_dir_group }}"

- name: Download nextcloud
  unarchive:
    src: "https://download.nextcloud.com/server/releases/nextcloud-{{ nextcloud_version }}.tar.bz2"
    dest: "{{ nextcloud_destination }}"
    creates: "{{ nextcloud_destination }}/nextcloud"
    remote_src: yes
    owner: "{{ nextcloud_dir_user }}"
    group: "{{ nextcloud_dir_group }}"

- name: Setup nextcloud cron to run every 5 minutes
  cron:
    name: "Nextcloud cron"
    minute: "*/5"
    user: "{{ nextcloud_dir_user }}"
    job: "/usr/bin/php -f {{ nextcloud_destination }}/nextcloud/cron.php"

- name: Configure PHP memory limit as recommended by Nextcloud
  lineinfile:
    path: "/etc/php/{{ php_fpm_version }}/fpm/php.ini"
    regex: '^memory_limit ='
    line: "memory_limit = {{ nextcloud_php_memory_limit }}"
  when: php_fpm_version is defined

- name: Setup automatic daily backups
  include_tasks: backups.yml
  when: nextcloud_backup is defined

- name: Check config file status
  stat:
    path: "{{ nextcloud_destination }}/nextcloud/config/config.php"
  register: nextcloud_config_file

- name: Create config file if it doesn't exist
  template:
    src: config.php.j2
    dest: "{{ nextcloud_destination }}/nextcloud/config/config.php"
  when:
    - nextcloud_config is defined
    - not nextcloud_config_file.stat.exists

- name: Configure Nextcloud installation
  lineinfile:
    path: "{{ nextcloud_destination }}/nextcloud/config/config.php"
    regexp: "^  '{{ item.key }}' => .*,$"
    line: "  '{{ item.key }}' => {{ item.value }},"
    insertbefore: '^\);$'
  loop: "{{ nextcloud_config|default({})|dict2items }}"
  no_log: true

- name: OnlyOffice hack
  include_tasks: onlyoffice-hack.yml
